# User API

# data
components:
  requestBodies:
    userInfo:
      description: 회원 정보
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              profileImg:
                $ref: "#/components/schemas/profileImg"
              userInfo:
                $ref: "#/components/schemas/userInfo"
    userUpdateInfo:
      description: 회원 수정 정보
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              profileImg:
                $ref: "#/components/schemas/profileImg"
              userInfo:
                $ref: "#/components/schemas/userUpdateInfo"
    updateMyCalculetInfo:
      description: 마이 계산기 정보 수정
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              updateMessage:
                $ref: "#/components/schemas/updateLog/properties/message"
              calculetInfo:
                $ref: "#/components/schemas/calculetUpdate"
  parameters:
    userId:
      in: path
      required: true
      name: userId
      schema:
        $ref: "#/components/schemas/userInfo/properties/id"
  responses:
    myCalculetInfo:
      description: 계산기 불러오기 성공
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/calculet"
            properties:
              id:
                $ref: "#/components/schemas/calculetId"
    myCalculetList:
      description: 마이 계산기 리스트
      content:
        application/json:
          schema:
            type: object
            properties:
              calculetList:
                type: array
                items:
                  $ref: "#/components/schemas/myCalculetList"
              count:
                $ref: "#/components/schemas/calculetListCount"
    userPublicInfo:
      description: 유저 공개 프로필 (정보)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userPublicInfo"
    userPublicCalculet:
      description: 유저 공개 프로필 (계산기)
      content:
        application/json:
          schema:
            type: object
            properties:
              calculetList:
                type: array
                items:
                  $ref: "#/components/schemas/calculetPreview"
              count:
                $ref: "#/components/schemas/calculetListCount"
  schemas:
    userSimpleInfo:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/userInfo/properties/id"
        userName:
          $ref: "#/components/schemas/userInfo/properties/userName"
        profileImgSrc:
          $ref: "#/components/schemas/profileImgSrc"
    userPublicInfo:
      type: object
      properties:
        userName:
          $ref: "#/components/schemas/userInfo/properties/userName"
        profileImgSrc:
          $ref: "#/components/schemas/profileImgSrc"
        job:
          $ref: "#/components/schemas/userInfo/properties/job"
        bio:
          $ref: "#/components/schemas/userInfo/properties/bio"
        isMe:
          $ref: "#/components/schemas/isMe"
    userProfile:
      $ref: "#/components/schemas/userInfo"
      properties:
        profileImgSrc:
          $ref: "#/components/schemas/profileImgSrc"
        email:
          $ref: "#/components/schemas/email"
    userUpdateInfo:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/email"
        userName:
          $ref: "#/components/schemas/userInfo/properties/userName"
        job:
          $ref: "#/components/schemas/userInfo/properties/job"
        bio:
          $ref: "#/components/schemas/userInfo/properties/bio"
    userInfo:
      type: object
      properties:
        id:
          type: string
          description: firebase uid
          example: "FmBZs9SG8ybc0hla149hKXXTnT52"
        userName:
          type: string
          description: 사용자 이름
          example: "test user"
        bio:
          type: string
          description: 사용자 소개
          example: "안녕하세요"
        sex:
          type: string
          description: 사용자 성별
          oneOf:
            - "F"
            - "M"
          example: "F"
        birthdate:
          type: string
          description: 사용자 생년월일
          example: "2023-01-01"
        job:
          type: string
          description: 사용자 직업
          example: "개발자"
    profileImgSrc:
      type: string
      description: 사용자 프로필 src path
      example: "/file/profile/FmBZs9SG8ybc0hla149hKXXTnT52"
    profileImg:
      type: string
      format: binary
      description: 프로필 이미지
    email:
      type: string
      format: email
      descrition: 사용자 이메일
      example: "test@naver.com"
